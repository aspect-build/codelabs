"Declare dependencies for bzlmod, see https://bazel.build/build/bzlmod"
bazel_dep(name = "aspect_bazel_lib",   version = "1.19.0")
bazel_dep(name = "aspect_rules_js",    version = "1.13.1")
bazel_dep(name = "aspect_rules_ts",    version = "1.0.5")
bazel_dep(name = "gazelle",            version = "0.32.0", repo_name = "bazel_gazelle")
bazel_dep(name = "protobuf",           version = "21.7")
bazel_dep(name = "rules_apple", version = "3.0.0")
bazel_dep(name = "rules_go",           version = "0.41.0", repo_name = "io_bazel_rules_go")
bazel_dep(name = "rules_jvm_external", version = "4.5")
bazel_dep(name = "rules_python",       version = "0.16.1")
bazel_dep(name = "rules_swift", version = "1.12.0")
bazel_dep(name = "rules_swift_package_manager", version = "0.12.0")

# Python
# https://github.com/bazelbuild/rules_python/tree/main/examples/bzlmod
pip = use_extension("@rules_python//python:extensions.bzl", "pip")
python = use_extension("@rules_python//python:extensions.bzl", "python")

python.toolchain(
    name = "python3_9",
    python_version = "3.9",
)

use_repo(python, "python3_9_toolchains")

register_toolchains(
    "@python3_9_toolchains//:all",
)

pip.parse(
    name = "pip",
    requirements_lock = "//:requirements_lock.txt",
)

use_repo(pip, "pip")

# Java and other JVM languages:
# https://github.com/bazelbuild/rules_jvm_external/blob/master/examples/bzlmod/MODULE.bazel
# https://github.com/bazelbuild/rules_jvm_external#pinning-artifacts-and-integration-with-bazels-downloader
maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")

maven.install(
    artifacts = ["io.grpc:grpc-all:1.51.1"],
    lock_file = "//:maven_install.json",
)

use_repo(
    maven,
    "maven",
    "unpinned_maven",
)

# JavaScript and TypeScript
# https://github.com/aspect-build/rules_js/tree/main/e2e/bzlmod
# https://github.com/aspect-build/rules_ts/tree/main/e2e/bzlmod
npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm")

npm.npm_translate_lock(
    name = "npm",
    
    pnpm_lock = "//:pnpm-lock.yaml",
    npmrc = "//:.npmrc",
)

use_repo(npm, "npm")

rules_ts_ext = use_extension(
    "@aspect_rules_ts//ts:extensions.bzl",
    "ext",
    dev_dependency = True,
)

rules_ts_ext.deps()

use_repo(rules_ts_ext, "npm_typescript")

# Go
# https://github.com/bazelbuild/rules_go/tree/master/tests/bcr
go_deps = use_extension("@bazel_gazelle//:extensions.bzl", "go_deps")
go_sdk = use_extension("@io_bazel_rules_go//go:extensions.bzl", "go_sdk")

go_sdk.download(name = "go_sdk", version = "1.21.1")
use_repo(go_sdk, "go_sdk")

go_deps.from_file(go_mod = "//:go.mod")
use_repo(go_deps, "org_golang_google_grpc", "org_golang_google_protobuf")

# swift_deps START
swift_deps = use_extension(
    "@rules_swift_package_manager//:extensions.bzl",
    "swift_deps",
)
swift_deps.from_file(
    deps_index = "//:swift_deps_index.json",
)
use_repo(
    swift_deps,
    "swiftpkg_swifterswift",
)
# swift_deps END
